{"version":3,"sources":["Components/ToolbarLogo/ToolbarLogo.js","Components/ToolbarItem/ToolbarItem.js","Components/ToolbarSpacer/ToolbarSpacer.js","Components/Toolbar/Toolbar.js","Components/Cover/Cover.js","App.js","serviceWorker.js","index.js"],"names":["ToolbarLogo","react_default","a","createElement","className","React","Component","ToolbarItem","this","props","children","ToolbarSpacer","Toolbar","Components_ToolbarLogo_ToolbarLogo","Components_ToolbarItem_ToolbarItem","Components_ToolbarSpacer_ToolbarSpacer","Cover","href","class","xmlns","viewBox","role","data-icon","data-prefix","focusable","aria-hidden","fill","d","preserveAspectRatio","fill-rule","width","height","x","y","stroke","stroke-width","rx","cx","cy","r","App","Components_Toolbar_Toolbar","Cover_Cover_Cover","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wVAaeA,sMARX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,uBAJkBE,IAAMC,YCMjBC,0LAJX,OAAON,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeI,KAAKC,MAAMC,iBAF1BL,IAAMC,YCMjBK,0LAJX,OAAOV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBAFEC,IAAMC,YCmBnBM,mLAbX,OACEX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAACU,EAAD,MACAZ,EAAAC,EAAAC,cAACW,EAAD,eACAb,EAAAC,EAAAC,cAACW,EAAD,oBACAb,EAAAC,EAAAC,cAACW,EAAD,oBACAb,EAAAC,EAAAC,cAACY,EAAD,MACAd,EAAAC,EAAAC,cAACW,EAAD,wBATcT,IAAMC,WCJPU,0LAEjB,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,0DACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGc,KAAK,kCACNhB,EAAAC,EAAAC,cAAA,KAAGe,MAAM,mBAEXjB,EAAAC,EAAAC,cAAA,KAAGc,KAAK,0CACNhB,EAAAC,EAAAC,cAAA,KAAGe,MAAM,qBAEXjB,EAAAC,EAAAC,cAAA,KAAGc,KAAK,uCACNhB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OACEgB,MAAM,6BACNC,QAAQ,cACRC,KAAK,MACLC,YAAU,UACVC,cAAY,MACZC,UAAU,QACVC,cAAY,QAEZxB,EAAAC,EAAAC,cAAA,QACEuB,KAAK,eACLC,EAAE,mZAKV1B,EAAAC,EAAAC,cAAA,KAAGc,KAAK,iCACNhB,EAAAC,EAAAC,cAAA,KAAGe,MAAM,uBAIfjB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cAAca,KAAK,SAC9BhB,EAAAC,EAAAC,cAAA,OACEC,UAAU,QACVe,MAAM,6BACNC,QAAQ,aACRQ,oBAAoB,iBAEpB3B,EAAAC,EAAAC,cAAA,KAAGuB,KAAK,OAAOG,YAAU,WACvB5B,EAAAC,EAAAC,cAAA,QACE2B,MAAM,KACNC,OAAO,MACPC,EAAE,MACFC,EAAE,MACFC,OAAO,OACPC,eAAa,IACbC,GAAG,OAELnC,EAAAC,EAAAC,cAAA,UACEC,UAAU,SACViC,GAAG,OACHC,GAAG,OACHC,EAAE,MACFb,KAAK,oBA3DcpB,cCcpBkC,mLATX,OACEvC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACsC,EAAD,CAASrC,UAAU,YACnBH,EAAAC,EAAAC,cAACuC,EAAD,cALUpC,aCMEqC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOhD,EAAAC,EAAAC,cAAC+C,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1c1033df.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./ToolbarLogo.css\";\n\nclass ToolbarLogo extends React.Component {\n  render() {\n    return (\n      <div className=\"ToolbarLogo\">\n        <b>AL</b>\n      </div>\n    );\n  }\n}\n\nexport default ToolbarLogo;\n","import React from \"react\";\nimport \"./ToolbarItem.css\";\n\nclass ToolbarItem extends React.Component {\n  render() {\n    return <div className=\"ToolbarItem\">{this.props.children}</div>;\n  }\n}\n\nexport default ToolbarItem;\n","import React from \"react\";\nimport \"./ToolbarSpacer.css\";\n\nclass ToolbarSpacer extends React.Component {\n  render() {\n    return <div className=\"ToolbarSpacer\" />;\n  }\n}\n\nexport default ToolbarSpacer;\n","import React from \"react\";\nimport \"./Toolbar.css\";\n\nimport ToolbarLogo from \"../ToolbarLogo/ToolbarLogo\";\nimport ToolbarItem from \"../ToolbarItem/ToolbarItem\";\nimport ToolbarSpacer from \"../ToolbarSpacer/ToolbarSpacer\";\n\nclass Toolbar extends React.Component {\n  render() {\n    return (\n      <div className=\"Toolbar\">\n        <ToolbarLogo />\n        <ToolbarItem>Design</ToolbarItem>\n        <ToolbarItem>Development</ToolbarItem>\n        <ToolbarItem>Photography</ToolbarItem>\n        <ToolbarSpacer />\n        <ToolbarItem>Contact</ToolbarItem>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from \"react\";\nimport \"./Cover.css\";\n\nexport default class Cover extends Component {\n  render() {\n    return (\n      <div className=\"main\">\n        <div className=\"Cover\">\n          <h1>Hi! I'm Alan</h1>\n          <p>I'm a Junior Front-end Developer and Designer</p>\n          <div className=\"icons\">\n            <a href=\"https://github.com/Alan-Laredo\">\n              <i class=\"fab fa-github\" />\n            </a>\n            <a href=\"https://www.linkedin.com/in/alanlaredo\">\n              <i class=\"fab fa-linkedin\" />\n            </a>\n            <a href=\"https://userstyles.org/users/796885\">\n              <i className=\"fab fa-stylish\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 496 512\"\n                  role=\"img\"\n                  data-icon=\"stylish\"\n                  data-prefix=\"fab\"\n                  focusable=\"false\"\n                  aria-hidden=\"true\"\n                >\n                  <path\n                    fill=\"currentColor\"\n                    d=\"M 114.76944,7.982199 C 51.1872,7.982199 0,59.169399 0,122.75164 V 297.03116 H 229.1024 V 7.982199 Z m 152.12816,0 V 164.74796 H 496 v -42.0112 C 496,59.154519 444.8128,7.967319 381.23056,7.967319 Z m 0,194.560961 V 491.59212 H 381.23056 C 444.8128,491.59212 496,440.40492 496,376.82268 V 202.54316 Z M 0,334.82636 v 42.0112 C 0,440.4198 51.1872,491.607 114.76944,491.607 H 229.1024 V 334.84124 Z\"\n                  />\n                </svg>\n              </i>\n            </a>\n            <a href=\"mailto:AlanLaredo@hotmail.com\">\n              <i class=\"fas fa-envelope\" />\n            </a>\n          </div>\n        </div>\n        <a className=\"scroll-link\" href=\"#down\">\n          <svg\n            className=\"mouse\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 76 130\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          >\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <rect\n                width=\"70\"\n                height=\"118\"\n                x=\"1.5\"\n                y=\"1.5\"\n                stroke=\"#FFF\"\n                stroke-width=\"3\"\n                rx=\"36\"\n              />\n              <circle\n                className=\"scroll\"\n                cx=\"36.5\"\n                cy=\"31.5\"\n                r=\"4.5\"\n                fill=\"#FFF\"\n              />\n            </g>\n          </svg>\n        </a>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport Toolbar from \"./Components/Toolbar/Toolbar\";\nimport Cover from \"./Components/Cover/Cover\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Toolbar className=\"Toolbar\" />\n        <Cover />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}